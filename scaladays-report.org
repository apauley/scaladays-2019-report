#+TITLE: ScalaDays 2019
#+AUTHOR:
#+REVEAL_THEME: sky
#+REVEAL_TRANS: default
#+OPTIONS: toc:nil, num:nil

* ScalaDays 2019
:PROPERTIES:
:reveal_background: images/olympic-dinner-view.jpg
:reveal_background_trans: slide
:END:

Report from the Trenches

Andreas Pauley

[[https://twitter.com/apauley][@apauley]]

** EPFL Campus, where Scala began
:PROPERTIES:
:reveal_background: images/EPFL.jpg
:reveal_background_trans: slide
:END:

École Polytechnique Fédérale de Lausanne

** Swisstech Convention Centre
:PROPERTIES:
:reveal_background: images/SwissTechConventionCentre.jpg
:reveal_background_trans: slide
:END:

** Lausanne
:PROPERTIES:
:reveal_background: images/LausanneLakeBoat.jpg
:reveal_background_trans: slide
:END:

** Lausanne
:PROPERTIES:
:reveal_background: images/RoofsLake.jpg
:reveal_background_trans: slide
:END:

** Cathedral
:PROPERTIES:
:reveal_background: images/Cathedral.jpg
:reveal_background_size: 1500px
:reveal_background_trans: slide
:END:

** Swiss Food
:PROPERTIES:
:reveal_background: images/ColdMeatPlate.jpg
:reveal_background_trans: slide
:reveal_background_size: 1500px
:reveal_background_repeat: repeat
:END:

** Swiss Food
:PROPERTIES:
:reveal_background: images/CheeseFondu.jpg
:reveal_background_trans: slide
:reveal_background_size: 1500px
:reveal_background_repeat: repeat
:END:

** Swiss Braai Equipment
:PROPERTIES:
:reveal_background: images/SwissBraai.jpg
:reveal_background_trans: slide
:END:

* Schedule Overview

- Monday: Contributor's Summit

- Tuesday - Thursday: ScalaDays 2019 Talks

- Friday: Typelevel Summit

* Contributor's Summit
:PROPERTIES:
:reveal_background: images/ContributorsSummit.jpg
:reveal_background_trans: slide
:END:

* The Scala Staircase
:PROPERTIES:
:reveal_background: images/ScalaStaircase.jpg
:reveal_background_trans: slide
:reveal_background_size: 700px
:reveal_background_repeat: repeat
:END:


* Other Surrounding Events

Various dinners, coding get-togethers and walking tours.

* A Few ScalaDays Talks
:PROPERTIES:
:reveal_background: images/ScalaDaysBanner.jpg
:reveal_background_trans: slide
:END:

** [[https://scaladays.org/schedule/a-tour-of-scala-3][A Tour of Scala 3]] (Keynote)

Martin Odersky ([[https://www.twitter.com/odersky][@odersky]])

=Summary:=
Some cool new features that makes Scala development easier and simpler for beginners,
as well as many features that will help you when writing functional programs.

** [[https://scaladays.org/schedule/techniques-for-teaching-scala][Techniques for Teaching Scala]]

Noel Welsh ([[https://www.twitter.com/noelwelsh][@noelwelsh]])

=Summary:= We should focus on developing our teaching skills. Here are some useful ways to do this in Scala.

** [[https://scaladays.org/schedule/akka-streams-to-the-extreme][Akka Streams to the Extreme]]

Heiko Seeberger ([[https://www.twitter.com/hseeberger][@hseeberger]])

=Summary:= Akka Actors have many anti-patterns. Here is an example where doing distributed computation with Akka Streams can be better.

** [[https://scaladays.org/schedule/massively-parallel-distributed-scala-compilation----and-you][Massively Parallel Distributed Scala Compilation... And You!]]

Stu Hood ([[https://www.twitter.com/stuhood][@stuhood]])

=Summary:= Twitter is doing some amazing things to speed up compilation on a code base with millions of lines of Scala code.

** [[https://scaladays.org/schedule/making-our-future-better][Making Our Future Better]]

Viktor Klang ([[https://www.twitter.com/viktorklang][@viktorklang]])

=Summary:=
In future Future's will still immediately start running when created.
Regardless, there are a few things that can be done to make an eager Future faster and better.
Viktor said they did those things. And notably, they haven't mentioned cats-effect IO, Monix or ZIO.

** [[https://scaladays.org/schedule/concurrent-programming-in-2019-akka-monix-or-zio][Concurrent programming in 2019: Akka, Monix or ZIO?]]

Adam Warski ([[https://www.twitter.com/adamwarski][@adamwarski]])

=Summary:=
An impressive live-coding session where the same problem was solved, first with Akka actors and then with ZIO.

** [[https://scaladays.org/schedule/pure-functional-database-programming-without-jdbc][Pure Functional Database Programming‚ without JDBC]]

Rob Norris ([[https://www.twitter.com/tpolecat][@tpolecat]])

=Summary:=
Rob is the author of the most popular DB library for Scala, [[https://tpolecat.github.io/doobie/][Doobie]] (using JDBC).
JDBC is very old and blocking.
Rob mentioned his new [[https://github.com/tpolecat/skunk][Skunk]] library, and how he used some of the existing pure-functional libraries
(e.g. scodec and FS2) to make a direct TCP connection to PostgreSQL, and do some non-blocking DB queries.

** [[https://scaladays.org/schedule/scalaclean---full-program-static-analysis-at-scale][ScalaClean - full program static analysis at scale]]

Rory Graves ([[https://www.twitter.com/a_dev_musing][@a__dev__musing]])

=Summary:=
If your analysis includes all of the code to be deployed, then [[https://scalacenter.github.io/scalafix/][ScalaFix]] can safely modify the code in interesting ways.
For example, it can change method/class/package visibility to the minimum, or remove unused parameters.

** [[https://scaladays.org/schedule/compiling-to-preserve-our-privacy][Compiling to preserve our privacy]]

[[https://www.twitter.com/manojah_shanti][Manohar Jonnalagedda]] and [[https://www.twitter.com/jodersky][Jakob Odersky]].

=Summary:=
Suppose you want to get answers from multiple data sources.
But the data in each source can't be shared.

Real world example: certain organisations maintain spy satellites in orbit
around the earth. None of them desire sattelite collisions.
And none of them want to reveal the locations of their sattelites.

** [[https://scaladays.org/schedule/interactive-computing-with-jupyter-and-almond][Interactive Computing with Jupyter and Almond]]

Sören Brunk ([[https://www.twitter.com/soebrunk][@soebrunk]])

=Summary:=

[[https://github.com/almond-sh/almond][Almond]] allows you to write Scala code in your Jupyter notebooks.
The presentation was done entirely within Almond/Jupyter and featured live code
editing from within the presentation.

** [[https://scaladays.org/schedule/all-the-fancy-things-flexible-dependency-management-can-do][All the fancy things flexible dependency management can do]]

Alexandre Archambault ([[https://www.twitter.com/alxarchambault][@alxarchambault]])

=Summary:=
Coursier can do much more than just parallel downloads.
Among other things it can install applications and help bootstrap a clean system
with a Scala dev environment.

* Other ScalaDays Talks

https://scaladays.org/schedule

https://portal.klewel.com/watch/nice_url/scala-days-2019/

* [[https://typelevel.org/event/2019-06-summit-lausanne/][Typelevel Summit Talks]]

** Some Mistakes We Made When Designing Implicits (And Some Things We Got Right)

Martin Odersky ([[https://www.twitter.com/odersky][@odersky]])

=Summary:=
Implicits out, delegates in

** [[https://www.youtube.com/watch?v=QoRm47x8gv8][Brave New World - tales of PureScript and Haskell in production]]

Felix Mulder ([[https://twitter.com/FelixMulder][@FelixMulder]])

=Summary:=

Klarna is using Haskell in production.
They found it easier to teach to newcomers than Scala.

** [[https://www.youtube.com/watch?v=wO_jX8wGhU0][Actors Design Patterns and Arrowised FRP]]

Diego E. Alonso ([[https://twitter.com/diesalbla][@diesalbla]])

=Summary:=
We can try to understand Functional Reactive Programming by using actors as a metaphor.

** [[https://www.youtube.com/watch?v=han6vHzPLsY][Taking Resources to the Type Level]]

Vilem-Benjamin Liepelt ([[https://twitter.com/buggymcbugfix][@buggymcbugfix]])

=Summary:=
The [[https://granule-project.github.io/][Granule programming language]] has linear types. Linear types are cool.

** [[https://www.youtube.com/watch?v=K1ZwpumSHCc][Formal verification of Scala programs with Stainless]]

Romain Ruetschi ([[https://twitter.com/_romac][@_romac]])

=Summary:=
EPFL develops [[https://stainless.epfl.ch/][Stainless]], a tool which can formally verify a subset of Scala.

** [[https://www.youtube.com/watch?v=TBfvbrAXaWA][Exploring Scala Tooling ecosystem]]

Jeferson David Ossa ([[https://twitter.com/unyagami][@unyagami]])

=Summary:=
A [[https://speakerdeck.com/jedossa/exploring-the-scalas-tooling-ecosystem][summary]] of the latest tooling available to Scala developers.

* Something cool to look forward to

** [[https://github.com/fthomas/scala-steward][Scala Steward]]

A bot that submits PR's with upgraded version numbers for dependencies.

** [[https://scalacenter.github.io/scalafix/][ScalaFix]]

Write rules to automatically refactor Scala code

**  [[https://scalacenter.github.io/scalafix/][ScalaFix]] + [[https://github.com/fthomas/scala-steward][Scala Steward]]

A bot that automatically upgrades and refactors your code!

* Questions?
:PROPERTIES:
:reveal_background: ./images/forest-gnome.jpeg
:reveal_background_trans: slide
:END:
